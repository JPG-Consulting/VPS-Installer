#!/bin/bash

function read_password {
  local __resultvar=$1
  local __password
  local __password2
  
  while true; do
    read -sp "Enter new password: " password
    echo
    read -sp "Retype new password: " password2
    echo 
    
    [ "$__password" = "$__password2" ] && break
    echo "Sorry, passwords do not match"
  done
  
  eval $__resultvar="'$__password'"
}

# ==================================================================
#  Main entry point
# ==================================================================
# Run as root, of course. (this might not be necessary, because we have to run the script somehow with root anyway)

if [[ $(id -u) -ne 0 ]]; then 
  echo "Must be root to run this script."
	exit 87 # Non-root Exit Error
fi

# ------------------------------------------------
#  Non-privileged user
# ------------------------------------------------

while true; do
  read -p "Username: " USER_NAME
  [[ -n "$USER_NAME" ]] && break;
  echo "Sorry, username can not be empty"
done

adduser --gecos ",,," --disabled-password $USER_NAME
if [ $? -ne 0 ]; then
  echo "Error: Failed to add user $USER_NAME."
  exit 1
fi

echo "$USER_NAME:$USER_PASSWORD" | chpasswd
if [ $? -ne 0 ]; then
  echo "Error: Failed to set the password for user $USER_NAME"
  exit 1
fi

#apt-get update
#apt-get upgrade --yes
